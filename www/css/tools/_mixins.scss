/// Reusable media query using predefined breakpoint sizes
/// @requires {variable} grid-breakpoints
/// @param {String} $min - min-width
/// @param {String} $max - max-width
// Read about the @content directive: https://thoughtbot.com/blog/sasss-content-directive
@mixin responsive($min: null, $max: null) {
    @if $min == null and $max == null {
        // Throw error if none of the arguments are set
        @error "No value given for one or more required parameters";
    } @else if $min == $max {
        // Throw error if arguments are identical (equal values would make no sense here)
        @error 'Values min and max cannot be identical';
    } @else if
        ($min and not map-has-key($grid-breakpoints, $min)) or
        ($max and not map-has-key($grid-breakpoints, $max))
    {
        // Throw error if argument(s) are set, yet do not exist in the breakpoints map
        @error 'Invalid breakpoint size(s) given';
    }

    // Get pixel value(s) from breakpoint map
    $min: map-get($grid-breakpoints, $min);
    $max: map-get($grid-breakpoints, $max);

    @if $min and $max {
        // If both min and max are set
        @if $min > $max {
            // Throw error if min is larger than max (that would make no sense)
            @error 'min cannot be larger than max';
        }

        @media only screen and (min-width: $min) and (max-width: $max) {
            @content;
        }
    } @else if $min {
        // If only min is set
        @media only screen and (min-width: $min) {
            @content;
        }
    } @else if $max {
        // If only max is set
        @media only screen and (max-width: $max) {
            @content;
        }
    }
}
